# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!
  SUP_CLI: "/root/supervisor/supervisord -c /root/supervisor/supervisor.conf ctl"

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
    silent: true
  lint:
    cmds:
      - golangci-lint cache clean
      - golangci-lint run

  build:
    vars:
      GIT_COMMIT:
        sh: git log -n 1 --format=%h
      GIT_BRANCH:
        sh: git rev-parse --abbrev-ref HEAD
      BUILD_TS:
        sh: date +"%Y-%m-%d %H:%M:%S"
    cmds:
      - g use {{.GO_VERSION}}
      - go mod tidy
      - task: lint
      - >-
        go build -ldflags='
        -X "main.Version={{.VERSION}}"
        -X "main.GitCommit={{.GIT_COMMIT}}"
        -X "main.GitBranch={{.GIT_BRANCH}}"
        -X "main.BuildTS={{.BUILD_TS}}"'
        -tags=forceposix -o ./deploy/dist/main.exe ./cmd/service/main.go
      - cp ./deploy/dist/main.exe ./deploy/dev/main.exe
  build-linux:
    vars:
      GIT_COMMIT:
        sh: git log -n 1 --format=%h
      GIT_BRANCH:
        sh: git rev-parse --abbrev-ref HEAD
      BUILD_TS:
        sh: date +"%Y-%m-%d %H:%M:%S"
    cmds: 
      - g use {{.GO_VERSION}}
      - go mod tidy
      - task: lint
      - >-
        GOOS=linux GOARCH=amd64
        go build -ldflags='
        -X "main.Version={{.VERSION}}"
        -X "main.GitCommit={{.GIT_COMMIT}}"
        -X "main.GitBranch={{.GIT_BRANCH}}"
        -X "main.BuildTS={{.BUILD_TS}}"'
        -tags=forceposix -o ./deploy/dist/main  ./cmd/service/main.go
  version:
    cmds:
      - pwd
      - ./deploy/dist/main.exe version

  mkRoot:
    internal: true
    cmds:
      - ssh root@{{.HOST}} "mkdir {{.PROJECT_NAME}}"
    status:
      - ssh root@{{.HOST}} "test -d {{.PROJECT_NAME}}"

  mkView:
    internal: true
    cmds:
      - ssh root@{{.HOST}} "mkdir -p {{.PROJECT_NAME}}/view"
    status:
      - ssh root@{{.HOST}} "test -d {{.PROJECT_NAME}}/view"
  mkConf:
    internal: true
    cmds:
      - ssh root@{{.HOST}} "mkdir -p {{.PROJECT_NAME}}/config"
    status:
      - ssh root@{{.HOST}} "test -d {{.PROJECT_NAME}}/config"

  mkLog:
    internal: true
    cmds:
      - ssh root@{{.HOST}} "mkdir -p {{.PROJECT_NAME}}/log"
    status:
      - ssh root@{{.HOST}} "test -d {{.PROJECT_NAME}}/log"

  mkdirMonitor:
    internal: true
    cmds:
      - ssh root@{{.HOST}} "mkdir monitor"
    status:
      - ssh root@{{.HOST}} "test -d monitor" 
  scpMain:
    cmds:
      - scp ./deploy/dist/main root@{{.HOST}}:~/{{.PROJECT_NAME}}/main


  deploy:
    cmds:
      - task: mkRoot
      - task: mkLog
      - task: mkView
      - task: mkConf
      - ssh root@{{.HOST}} "pwd && ls -a"
      - ssh root@{{.HOST}} "cd {{.PROJECT_NAME}} && pwd && ls -a"
      - task: build-linux
      - scp ./deploy/assets/config.yaml root@{{.HOST}}:~/{{.PROJECT_NAME}}/config
      - scp ./deploy/assets/.env root@{{.HOST}}:~/{{.PROJECT_NAME}}/config
      - scp ./deploy/assets/supervisor/main.conf root@{{.HOST}}:~/supervisor/conf.d/main.conf
      - ssh root@{{.HOST}} "{{.SUP_CLI}} stop main || true"
      - scp ./deploy/dist/main root@{{.HOST}}:~/{{.PROJECT_NAME}}/main
      - ssh root@{{.HOST}} "cd {{.PROJECT_NAME}} && chmod 755 main"

  initConf:
    cmds:
      - scp ./deploy/assets/config.yaml root@{{.HOST}}:~/{{.PROJECT_NAME}}/config
      - scp ./deploy/assets/.env root@{{.HOST}}:~/{{.PROJECT_NAME}}/config
      - scp ./deploy/assets/supervisor/main.conf root@{{.HOST}}:~/supervisor/conf.d/main.conf
  
  initDB:
    cmds:
      - ssh root@{{.HOST}} "cd {{.PROJECT_NAME}} && ./main -f conf/config.yaml -e config/.env inittable"

  initUser:
    cmds:
      - ssh root@{{.HOST}} "cd {{.PROJECT_NAME}} && ./main -f conf/config.yaml -e config/.env inituser"

  main:
    - ssh root@{{.HOST}} "{{.SUP_CLI}} stop main || true"
    - scp ./deploy/assets/config.yaml root@{{.HOST}}:~/{{.PROJECT_NAME}}/config/config.yaml
    - scp ./deploy/assets/.env root@{{.HOST}}:~/{{.PROJECT_NAME}}/config
    - scp ./deploy/assets/supervisor/main.conf root@{{.HOST}}:~/supervisor/conf.d/main.conf
    # - scp ./deploy/dist/main root@{{.HOST}}:~/{{.PROJECT_NAME}}/main
    - ssh root@{{.HOST}} "{{.SUP_CLI}} reload"
    - ssh root@{{.HOST}} "{{.SUP_CLI}} start main"
    - ssh root@{{.HOST}} "{{.SUP_CLI}} status"
  mainStop:
    - ssh root@{{.HOST}} "{{.SUP_CLI}} stop main"
  
  logmon:
    - ssh root@{{.HOST}} "{{.SUP_CLI}} stop logmon || true"
    - scp ./deploy/assets/logmon.yaml root@{{.HOST}}:~/{{.PROJECT_NAME}}/config/logmon.yaml
    - scp ./deploy/assets/.env root@{{.HOST}}:~/{{.PROJECT_NAME}}/config
    - scp ./deploy/dist/logmon root@{{.HOST}}:~/{{.PROJECT_NAME}}/logmon
    - ssh root@{{.HOST}} "cd {{.PROJECT_NAME}} && chmod 755 logmon"
    - scp ./deploy/assets/supervisor/main.conf root@{{.HOST}}:~/supervisor/conf.d/main.conf
    - ssh root@{{.HOST}} "{{.SUP_CLI}} reload"
    - ssh root@{{.HOST}} "{{.SUP_CLI}} start logmon"
    - ssh root@{{.HOST}} "{{.SUP_CLI}} status"
  logmonStop:
    - ssh root@{{.HOST}} "{{.SUP_CLI}} stop logmon"
 
  

  



  
